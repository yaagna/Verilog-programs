$date
	Tue Mar 07 14:12:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! overflow $end
$var wire 4 " out [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$var reg 2 ' sel [1:0] $end
$scope module uut $end
$var wire 4 ( a [3:0] $end
$var wire 4 ) b [3:0] $end
$var wire 1 % clk $end
$var wire 4 * out [3:0] $end
$var wire 1 & reset $end
$var wire 2 + sel [1:0] $end
$var wire 5 , temp [4:0] $end
$var wire 1 ! overflow $end
$var reg 4 - result [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx -
b0 ,
b0 +
bx *
b0 )
b0 (
b0 '
0&
0%
b0 $
b0 #
bx "
0!
$end
#1
b0 "
b0 *
b0 -
1%
#2
0%
#3
1%
#4
0%
#5
1%
#6
0%
#7
1%
#8
0%
#9
1%
#10
0%
b1 $
b1 )
b10 ,
b1 #
b1 (
#11
b10 "
b10 *
b10 -
1%
#12
0%
#13
1%
#14
0%
#15
1%
#16
0%
#17
1%
#18
0%
#19
1%
#20
1!
0%
b1111 $
b1111 )
b11110 ,
b1111 #
b1111 (
#21
b1110 "
b1110 *
b1110 -
1%
#22
0%
1&
#23
b0 "
b0 *
b0 -
1%
#24
0!
0%
b1 '
b1 +
b0 $
b0 )
b0 ,
b0 #
b0 (
0&
#25
1%
#26
0%
#27
1%
#28
0%
#29
1%
#30
0%
#31
1%
#32
0%
#33
1%
#34
0%
b1 $
b1 )
b10 ,
b1 #
b1 (
#35
1%
#36
0%
#37
1%
#38
0%
#39
1%
#40
0%
#41
1%
#42
0%
#43
1%
#44
0%
b100 ,
b11 $
b11 )
#45
b1110 "
b1110 *
b1110 -
1%
#46
0%
#47
1%
#48
0%
#49
1%
#50
0%
#51
1%
#52
0%
#53
1%
#54
0%
