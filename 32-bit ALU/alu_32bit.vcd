$date
	Sat Mar 11 14:29:22 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! overflow $end
$var wire 32 " out [31:0] $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 1 % clk $end
$var reg 4 & sel [3:0] $end
$scope module dut $end
$var wire 32 ' a [31:0] $end
$var wire 32 ( b [31:0] $end
$var wire 1 % clk $end
$var wire 4 ) sel [3:0] $end
$var reg 32 * out [31:0] $end
$var reg 1 ! overflow $end
$var reg 33 + sum [32:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx +
bx *
b0 )
b11111111111111111111111111111111 (
b0 '
b0 &
0%
b11111111111111111111111111111111 $
b0 #
bx "
x!
$end
#1
0!
b0 "
b0 *
1%
#2
0%
#3
1%
#4
0%
#5
1%
#6
0%
#7
1%
#8
0%
#9
1%
#10
0%
b1 $
b1 (
b1 #
b1 '
#11
b1 "
b1 *
1%
#12
0%
#13
1%
#14
0%
#15
1%
#16
0%
#17
1%
#18
0%
#19
1%
#20
0%
b1 &
b1 )
b11111111111111111111111111111111 $
b11111111111111111111111111111111 (
b0 #
b0 '
#21
b11111111111111111111111111111111 "
b11111111111111111111111111111111 *
1%
#22
0%
#23
1%
#24
0%
#25
1%
#26
0%
#27
1%
#28
0%
#29
1%
#30
0%
b1010101010101010101010101010101 $
b1010101010101010101010101010101 (
b1010101010101010101010101010101 #
b1010101010101010101010101010101 '
#31
b1010101010101010101010101010101 "
b1010101010101010101010101010101 *
1%
#32
0%
#33
1%
#34
0%
#35
1%
#36
0%
#37
1%
#38
0%
#39
1%
#40
0%
b10101010101010101010101010101010 $
b10101010101010101010101010101010 (
#41
b11111111111111111111111111111111 "
b11111111111111111111111111111111 *
1%
#42
0%
#43
1%
#44
0%
#45
1%
#46
0%
#47
1%
#48
0%
#49
1%
#50
0%
b10 &
b10 )
#51
1%
#52
0%
#53
1%
#54
0%
#55
1%
#56
0%
#57
1%
#58
0%
#59
1%
#60
0%
b11111111111111111111111111111111 $
b11111111111111111111111111111111 (
b0 #
b0 '
#61
1%
#62
0%
#63
1%
#64
0%
#65
1%
#66
0%
#67
1%
#68
0%
#69
1%
#70
0%
b11 &
b11 )
b0 $
b0 (
#71
x!
bx "
bx *
b0 +
1%
#72
0%
#73
0!
b0 "
b0 *
1%
#74
0%
#75
1%
#76
0%
#77
1%
#78
0%
#79
1%
#80
0%
b10101010101010101010101010101010 $
b10101010101010101010101010101010 (
b1010101010101010101010101010101 #
b1010101010101010101010101010101 '
#81
b11111111111111111111111111111111 +
1%
#82
0%
#83
b11111111111111111111111111111111 "
b11111111111111111111111111111111 *
1%
#84
0%
#85
1%
#86
0%
#87
1%
#88
0%
#89
1%
#90
0%
b11111111111111111111111111111111 $
b11111111111111111111111111111111 (
b11111111111111111111111111111111 #
b11111111111111111111111111111111 '
#91
b111111111111111111111111111111110 +
1%
#92
0%
#93
1!
b11111111111111111111111111111110 "
b11111111111111111111111111111110 *
1%
#94
0%
#95
1%
#96
0%
#97
1%
#98
0%
#99
1%
#100
0%
b100 &
b100 )
b0 $
b0 (
b0 #
b0 '
#101
b0 +
1%
#102
0%
#103
0!
b0 "
b0 *
1%
#104
0%
#105
1%
#106
0%
#107
1%
#108
0%
#109
1%
#110
0%
b11111111111111111111111111111111 $
b11111111111111111111111111111111 (
#111
b100000000000000000000000000000001 +
1%
#112
0%
#113
1!
b1 "
b1 *
1%
#114
0%
#115
1%
#116
0%
#117
1%
#118
0%
#119
1%
#120
0%
b11111111111111111111111111111111 #
b11111111111111111111111111111111 '
#121
b0 +
1%
#122
0%
#123
0!
b0 "
b0 *
1%
#124
0%
#125
1%
#126
0%
#127
1%
#128
0%
#129
1%
#130
0%
b1010101010101010101010101010101 $
b1010101010101010101010101010101 (
b1010101010101010101010101010101 #
b1010101010101010101010101010101 '
#131
1%
#132
0%
#133
1%
#134
0%
#135
1%
#136
0%
#137
1%
#138
0%
#139
1%
#140
0%
b10101010101010101010101010101010 $
b10101010101010101010101010101010 (
b11111111111111111111111111111111 #
b11111111111111111111111111111111 '
#141
b1010101010101010101010101010101 +
1%
#142
0%
#143
b1010101010101010101010101010101 "
b1010101010101010101010101010101 *
1%
#144
0%
#145
1%
#146
0%
#147
1%
#148
0%
#149
1%
#150
0%
